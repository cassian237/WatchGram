plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def signingProperties = new Properties()
def signingPropertiesFile = rootProject.file('signing.properties')
if (signingPropertiesFile.exists()) {
    signingPropertiesFile.withReader('UTF-8') { reader ->
        signingProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '6'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.1'
}

android {
    namespace "clapps.be.watchgram"
    compileSdkVersion 34

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "clapps.be.watchgram"
        minSdkVersion 25
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }

    signingConfigs {
        release {
            keyAlias signingProperties['keyAlias']
            keyPassword signingProperties['keyPassword']
            storeFile signingProperties['storeFile'] ? file(signingProperties['storeFile']) : null
            storePassword signingProperties['storePassword']
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
            universalApk true
        }
    }

    buildTypes {
        release {
           signingConfig signingConfigs.release
        }

        debug {
           signingConfig signingConfigs.release
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.android.material:material:1.11.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}
